{"version":3,"file":"static/js/871.fec0e716.chunk.js","mappings":"qOAyCA,UAtCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAA8BL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA7BE,GAAFD,EAAA,GAAYA,EAAA,IAC1BE,GAA0BR,EAAAA,EAAAA,UAAS,IAAGS,GAAAP,EAAAA,EAAAA,GAAAM,EAAA,GAAxBE,GAAFD,EAAA,GAAUA,EAAA,IAgBtB,OAfAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGF,OAHEF,EAAAC,KAAA,EAEpBT,EAAS,IACTH,GAAW,GAAOW,EAAAE,KAAA,GACCC,EAAAA,EAAAA,IAAWxB,GAAS,KAAD,EAAhCoB,EAAIC,EAAAI,KACVlB,EAAWa,EAAKM,SAASL,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAEzBR,EAASQ,EAAAM,GAAMC,SAAS,QAEN,OAFMP,EAAAC,KAAA,GAExBZ,GAAW,GAAOW,EAAAQ,OAAA,6BAAAR,EAAAS,OAAA,GAAAX,EAAA,wBAErB,kBAXoB,OAAAH,EAAAe,MAAA,KAAAC,UAAA,KAYrBhC,GAAWe,GACb,GAAG,CAACf,KAEFiC,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,WAAY,OAAQC,UAAW,QAASC,SAAA,EACpDC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,aACJC,EAAAA,EAAAA,KAAA,MAAIJ,MAAO,CAAEK,QAAS,OAAQC,SAAU,OAAQC,IAAK,QAASJ,SAC3D/B,EAAQoC,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAMF,EAANE,OAAQC,EAAcH,EAAdG,eAAc,OACxCb,EAAAA,EAAAA,MAAA,MAAIC,MAAO,CAAEa,UAAW,QAASV,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,OACEU,IAAG,kCAAAC,OAAoCH,EAAeI,aACtDC,IAAI,MAENlB,EAAAA,EAAAA,MAAA,KAAAI,SAAA,CAAG,SAAOQ,MACVZ,EAAAA,EAAAA,MAAA,KAAAI,SAAA,CAAG,WAASS,EAAeM,OAAO,SANGR,EAOlC,QAKf,C","sources":["pages/Reviews/Reviews.jsx"],"sourcesContent":["import { getReviews } from 'Api/serviseMovies/serviseMovies';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const getReviewsMovie = async () => {\n      try {\n        setError('');\n        setLoading(false);\n        const data = await getReviews(movieId);\n        setReviews(data.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    movieId && getReviewsMovie();\n  }, [movieId]);\n  return (\n    <div style={{ marginLeft: '60px', marginTop: '60px' }}>\n      <h1>Reviews</h1>\n      <ul style={{ display: 'flex', flexWrap: 'wrap', gap: '12px' }}>\n        {reviews.map(({ id, author, author_details }) => (\n          <li style={{ listStyle: 'none' }} key={id}>\n            <img\n              src={`https://image.tmdb.org/t/p/w200${author_details.avatar_path}`}\n              alt=\"\"\n            />\n            <p>Name: {author}</p>\n            <p>Rating: {author_details.rating} </p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\nexport default Reviews;\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","setLoading","_useState5","_useState6","setError","useEffect","getReviewsMovie","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","getReviews","sent","results","t0","message","finish","stop","apply","arguments","_jsxs","style","marginLeft","marginTop","children","_jsx","display","flexWrap","gap","map","_ref2","id","author","author_details","listStyle","src","concat","avatar_path","alt","rating"],"sourceRoot":""}